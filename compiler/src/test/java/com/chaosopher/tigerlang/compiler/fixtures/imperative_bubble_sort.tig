/* bubble sort, keep looping through array swapping
adgacent elements until we do a complete loop without
any swaps */
let
type iat = array of int
var src := iat[10] of 0
function bubblesort(ar:iat)  = 
(
    let
        var first:int := 0
        var second:int := 0
        var temp:int := 0
        var swaps:int := 1 /* boolean swaps */
        
        function swapper() = (
            
            while swaps do (
                swaps := 0;
                ( 
                    for i := 1 to 10 do 
                    (
                        first := ar[i - 1];
                        second := ar[i];
                        if ar[first] > ar[second] then (
                            temp := ar[second];
                            ar[first] := ar[second];
                            ar[second] := temp;
                            swaps := 1
                        )
                    )
                )
            )
        
        )
        
    in
        swapper()
    end
)
in
(   src[0] := 8;
    src[1] := 8;
    src[2] := 2;
    src[3] := 6;
    src[4] := 4;
    bubblesort(src)
)
end
